##############################################################################
# Install prereqs for perf/tools
##############################################################################
# # no_log: true
- hosts: servers
  gather_facts: True
  become: yes
  become_method: sudo
  tags:
    - prereqs
    - perf
    - perf_tools
    - tools
    - servers
  pre_tasks:
  - name: "Install prereq tools"
    package:
      name: "{{ item }}"
      state: present
    with_items:
        - nethogs
        - ccze
        - htop
        - silversearcher-ag
        - netcat
        - nmap
        - netperf
        - ngrep
        - unzip
        - nload
        - ncdu
        - traceroute
        - sysstat
        - conntrack
        # NOTE: RUN THIS GUY
        - mtr
        - tmux
        # SOURCE: https://www.tecmint.com/test-network-throughput-in-linux/
        - iperf3
        # SOURCE: https://www.tecmint.com/tcpflow-analyze-debug-network-traffic-in-linux/
        - tcpflow
        # SOURCE: https://www.tecmint.com/linux-network-bandwidth-monitoring-tools/
        - iftop

  # SOURCE: https://gist.github.com/kometchtech/c5681b2a70b30c99bf7e834ffb3abba5
  - name: "Install dnsperf prereqs"
    package:
      name: "{{ item }}"
      state: present
    with_items:
        - bind9utils
        - libbind-dev
        - libkrb5-dev
        - libssl-dev
        - libcap-dev
        - libxml2-dev
        - geoip-bin
        - libgeoip-dev
        - build-essential
        - curl
        # REQUIRED: https://www.tecmint.com/hegemon-system-monitoring-tool-for-linux/
        - libsensors4-dev

  - name: check if /usr/bin/sysdig exists
    stat:
      path: /usr/bin/sysdig
    register: sysdig_result
    failed_when: false
    changed_when: false
    tags:
      - slow

  - name: "SYSDIG: curl -s https://s3.amazonaws.com/download.draios.com/stable/install-sysdig | sudo bash ONLY if it is not installed already"
    shell: |
      bash -lc "curl -s https://s3.amazonaws.com/download.draios.com/stable/install-sysdig | sudo bash"
    args:
      executable: /bin/bash
    when: not sysdig_result.stat.exists
    tags:
      - slow

  - name: check if /usr/local/bin/cargo exists
    stat:
      path: /usr/local/bin/cargo
    register: cargo_result
    failed_when: false
    changed_when: false
    tags:
      - slow

  - name: "RUST: curl -sSf https://static.rust-lang.org/rustup.sh | sh ONLY if it is not installed already"
    shell: |
      bash -lc "curl -sSf https://static.rust-lang.org/rustup.sh | sh"
    args:
      executable: /bin/bash
    when: not cargo_result.stat.exists
    tags:
      - slow

  - name: install ctop
    shell: |
      curl -L 'https://github.com/bcicen/ctop/releases/download/v0.7.1/ctop-0.7.1-linux-amd64' > /usr/local/bin/ctop
      chmod +x /usr/local/bin/ctop
    become: yes
    become_method: sudo
    args:
      executable: /bin/bash
      creates: /usr/local/bin/ctop

    # https://github.com/wercker/stern/releases/download/1.10.0/stern_linux_amd64

    # https://github.com/bcicen/ctop/releases/download/v0.7.1/ctop-0.7.1-linux-amd64

  # NOTE: Multi pod and container log tailing for Kubernetes
  - name: install stern
    shell: |
      curl -L 'https://github.com/wercker/stern/releases/download/1.10.0/stern_linux_amd64' > /usr/local/bin/stern
      chmod +x /usr/local/bin/stern
    become: yes
    become_method: sudo
    args:
      executable: /bin/bash
      creates: /usr/local/bin/stern

  - name: Add source <(stern --completion=bash) to root/ssh user bashrc
    lineinfile:
      path: '$HOME/.bashrc'
      line: 'source <(stern --completion=bash)'
      create: yes
    become: '{{ item }}'
    with_items:
      - true  # Run as root
      - false # Run as SSH user

  # An interactive kubernetes client featuring auto-complete using go-prompt.
  - name: install kube-prompt
    shell: |
      wget https://github.com/c-bata/kube-prompt/releases/download/v1.0.5/kube-prompt_v1.0.5_linux_amd64.zip
      unzip kube-prompt_v1.0.5_linux_amd64.zip
      chmod +x kube-prompt
      sudo mv ./kube-prompt /usr/local/bin/kube-prompt
    become: yes
    become_method: sudo
    args:
      executable: /bin/bash
      creates: /usr/local/bin/kube-prompt

  # An interactive kubernetes client featuring auto-complete using go-prompt.
  # https://github.com/boz/kail/releases/download/v0.7.0/kail_0.7.0_linux_amd64.tar.gz
  - name: install kail
    shell: |
      wget https://github.com/boz/kail/releases/download/v0.7.0/kail_0.7.0_linux_amd64.tar.gz
      tar xvf kail_0.7.0_linux_amd64.tar.gz
      chmod +x kail
      mv ./kail /usr/local/bin/kail
    become: yes
    become_method: sudo
    args:
      executable: /bin/bash
      creates: /usr/local/bin/kail

  # Simplistic interactive filtering tool
  - name: install peco
    shell: |
      wget https://github.com/peco/peco/releases/download/v0.5.3/peco_linux_amd64.tar.gz ;
      tar xvf peco_linux_amd64.tar.gz ;
      mv peco_linux_amd64/peco /usr/local/bin/peco ;
      chmod +x /usr/local/bin/peco ;
    become: yes
    become_method: sudo
    args:
      executable: /bin/bash
      creates: /usr/local/bin/peco

  # https://github.com/pulumi/kubespy/releases/download/v0.4.0/kubespy-linux-amd64.tar.gz

  # kubespy - Tools for observing Kubernetes resources in real time, powered by Pulumi
  - name: install kubespy - Tools for observing Kubernetes resources in real time, powered by Pulumi
    shell: |
      wget https://github.com/pulumi/kubespy/releases/download/v0.4.0/kubespy-linux-amd64.tar.gz ;
      tar xvf kubespy-linux-amd64.tar.gz ;
      mv releases/kubespy-linux-amd64/kubespy /usr/local/bin/kubespy ;
      chmod +x /usr/local/bin/kubespy ;
    become: yes
    become_method: sudo
    args:
      executable: /bin/bash
      creates: /usr/local/bin/kubespy

  # kubetail
  - name: install kubetail
    shell: |
      curl -L 'https://raw.githubusercontent.com/johanhaleby/kubetail/master/kubetail' > /usr/local/bin/kubetail ;
      chmod +x /usr/local/bin/kubetail ;
      curl -L 'https://raw.githubusercontent.com/johanhaleby/kubetail/master/completion/kubetail.bash' > /etc/bash_completion.d/kubetail ;
    become: yes
    become_method: sudo
    args:
      executable: /bin/bash
      creates: /usr/local/bin/kubetail

  # https://raw.githubusercontent.com/johanhaleby/kubetail/master/kubetail

  # https://github.com/peco/peco/releases/download/v0.5.3/peco_linux_amd64.tar.gz

  - name: Install kube-shell
    pip:
      name: "kube-shell"

  # NOTE: fast way to switch between clusters and namespaces in kubectl
  - name: install kubectx - fast way to switch between clusters and namespaces in kubectl
    shell: |
      curl -L 'https://raw.githubusercontent.com/ahmetb/kubectx/master/kubectx' > /usr/local/bin/kubectx
      chmod +x /usr/local/bin/kubectx
    become: yes
    become_method: sudo
    args:
      executable: /bin/bash
      creates: /usr/local/bin/kubectx

  - name: install kubebox - Terminal and Web console for Kubernetes
    shell: |
      curl -L 'https://github.com/astefanutti/kubebox/releases/download/v0.3.2/kubebox-linux' > /usr/local/bin/kubebox
      chmod +x /usr/local/bin/kubebox
    become: yes
    become_method: sudo
    args:
      executable: /bin/bash
      creates: /usr/local/bin/kubebox

  # kubectl create clusterrolebinding default-cluster-admin --clusterrole=cluster-admin --serviceaccount=default:default


  # curl -Lo kubebox https://github.com/astefanutti/kubebox/releases/download/v0.3.2/kubebox-linux && chmod +x kubebox

  # NOTE: fast way to switch between clusters and namespaces in kubectl
  - name: install kubens - fast way to switch between clusters and namespaces in kubectl
    shell: |
      curl -L 'https://raw.githubusercontent.com/ahmetb/kubectx/master/kubens' > /usr/local/bin/kubens
      chmod +x /usr/local/bin/kubens
    become: yes
    become_method: sudo
    args:
      executable: /bin/bash
      creates: /usr/local/bin/kubens


  ##############################################################################
  # Install osquery
  ##############################################################################
  # $ export OSQUERY_KEY=1484120AC4E9F8A1A577AEEE97A80C63C9D8B80B
  # $ sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys $OSQUERY_KEY
  # $ sudo add-apt-repository 'deb [arch=amd64] https://pkg.osquery.io/deb deb main'
  # $ sudo apt update
  # $ sudo apt install osquery
